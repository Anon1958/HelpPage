WITH household_totals AS (
    SELECT
        v.TimePeriod_ID,
        v.HouseholdKey,
        SUM(v.TotalAUA) AS TotalAUA
    FROM [ZZR0Prod].[dbo].[v_M_AcctHistory] v
    /* ←‑‑ keep only the periods you care about */
    WHERE v.TimePeriod_ID IN (202412, 202501, 202503)
    GROUP BY
        v.TimePeriod_ID,
        v.HouseholdKey
),
bucketed AS (
    SELECT
        ht.TimePeriod_ID,
        ht.HouseholdKey,
        ht.TotalAUA,
        CASE
            WHEN ht.TotalAUA  <       0                      THEN '<$0'
            WHEN ht.TotalAUA  =       0                      THEN '$0'
            WHEN ht.TotalAUA  >       0  AND ht.TotalAUA <  250000     THEN '$0‑$250K'
            WHEN ht.TotalAUA >=  250000 AND ht.TotalAUA <  500000     THEN '$250K‑$500K'
            WHEN ht.TotalAUA >=  500000 AND ht.TotalAUA < 1000000     THEN '$500K‑$1M'
            WHEN ht.TotalAUA >= 1000000 AND ht.TotalAUA < 5000000     THEN '$1M‑$5M'
            WHEN ht.TotalAUA >= 5000000 AND ht.TotalAUA < 20000000    THEN '$5M‑$20M'
            ELSE '$20M+'
        END AS Segment
    FROM household_totals ht
)
SELECT
    b.TimePeriod_ID,
    b.Segment,
    COUNT(DISTINCT b.HouseholdKey) AS NumHouseholds,
    SUM(b.TotalAUA)                AS TotalAUA
FROM bucketed b
GROUP BY
    b.TimePeriod_ID,
    b.Segment
ORDER BY
    b.TimePeriod_ID,
    CASE b.Segment
        WHEN '<$0'          THEN 1
        WHEN '$0'           THEN 2
        WHEN '$0‑$250K'     THEN 3
        WHEN '$250K‑$500K'  THEN 4
        WHEN '$500K‑$1M'    THEN 5
        WHEN '$1M‑$5M'      THEN 6
        WHEN '$5M‑$20M'     THEN 7
        WHEN '$20M+'        THEN 8
    END;
    
    
    
    
    
/*=====================================================
  0)  Set the time‑periods you care about
=====================================================*/
DECLARE @Periods TABLE (TimePeriod_ID int PRIMARY KEY);
INSERT INTO @Periods (TimePeriod_ID)
VALUES (202412), (202501), (202503);      -- add / remove as needed

/*=====================================================
  1)  Collapse the raw table to ONE row per household 
      per period (no duplicates possible after this)
=====================================================*/
WITH household_totals AS (
    SELECT
        v.TimePeriod_ID,
        v.HouseholdKey,
        SUM(v.TotalAUA) AS TotalAUA          -- sum of every account in the HH
    FROM [ZZR0Prod].[dbo].[v_M_AcctHistory] v
    JOIN @Periods p  ON p.TimePeriod_ID = v.TimePeriod_ID
    GROUP BY
        v.TimePeriod_ID,
        v.HouseholdKey
),

/*=====================================================
  2)  Tag each household with the correct AUA bracket
=====================================================*/
bucketed AS (
    SELECT
        ht.TimePeriod_ID,
        ht.HouseholdKey,
        ht.TotalAUA,
        CASE
            WHEN ht.TotalAUA  <       0                      THEN '<$0'
            WHEN ht.TotalAUA  =       0                      THEN '$0'
            WHEN ht.TotalAUA  >       0  AND ht.TotalAUA <  250000     THEN '$0‑$250K'
            WHEN ht.TotalAUA >=  250000 AND ht.TotalAUA <  500000     THEN '$250K‑$500K'
            WHEN ht.TotalAUA >=  500000 AND ht.TotalAUA < 1000000     THEN '$500K‑$1M'
            WHEN ht.TotalAUA >= 1000000 AND ht.TotalAUA < 5000000     THEN '$1M‑$5M'
            WHEN ht.TotalAUA >= 5000000 AND ht.TotalAUA < 20000000    THEN '$5M‑$20M'
            ELSE '$20M+'
        END                                               AS Segment
    FROM household_totals ht
)

/*=====================================================
  3)  Final roll‑up – one row per (Period, Segment)
=====================================================*/
SELECT
    b.TimePeriod_ID,
    b.Segment,
    COUNT(*)            AS NumHouseholds,    -- each row is already one unique HH
    SUM(b.TotalAUA)     AS SegmentTotalAUA
FROM bucketed b
GROUP BY
    b.TimePeriod_ID,
    b.Segment
ORDER BY
    b.TimePeriod_ID,
    CASE b.Segment                      -- keeps brackets in logical order
        WHEN '<$0'          THEN 1
        WHEN '$0'           THEN 2
        WHEN '$0‑$250K'     THEN 3
        WHEN '$250K‑$500K'  THEN 4
        WHEN '$500K‑$1M'    THEN 5
        WHEN '$1M‑$5M'      THEN 6
        WHEN '$5M‑$20M'     THEN 7
        WHEN '$20M+'        THEN 8
    END;
    
    
    
—


WITH HouseholdTotals AS (
    -- Step 1: Aggregate TotalAUA per household for the specified periods
    SELECT 
        TimePeriod_ID,
        HouseholdKey,
        SUM(TotalAUA) AS TotalAUA
    FROM [ZZR0Prod].[dbo].[v_M_AcctHistory]
    WHERE TimePeriod_ID IN (202412, 202501, 202503)
    GROUP BY 
        TimePeriod_ID, 
        HouseholdKey
),
BracketedTotals AS (
    -- Step 2: Assign each household's total to an AUA bracket
    SELECT
        HT.TimePeriod_ID,
        HT.HouseholdKey,
        HT.TotalAUA,
        CASE 
            WHEN HT.TotalAUA < 0 THEN '<$0'
            WHEN HT.TotalAUA = 0 THEN '$0'
            WHEN HT.TotalAUA <= 250000 THEN '$0-$250K'
            WHEN HT.TotalAUA <= 500000 THEN '$250K-$500K'
            WHEN HT.TotalAUA <= 1000000 THEN '$500K-$1M'
            WHEN HT.TotalAUA <= 5000000 THEN '$1M-$5M'
            WHEN HT.TotalAUA <= 20000000 THEN '$5M-$20M'
            ELSE '$20M+'
        END AS AUA_Bracket
    FROM HouseholdTotals AS HT
)
-- Step 3: Group by TimePeriod and Bracket, counting households and summing TotalAUA
SELECT 
    BT.TimePeriod_ID,
    BT.AUA_Bracket,
    COUNT(*) AS HouseholdCount,        -- unique households in this bracket (one row per household in BracketedTotals)
    SUM(BT.TotalAUA) AS TotalAUA_Sum   -- total AUA for all households in this bracket
FROM BracketedTotals AS BT
GROUP BY 
    BT.TimePeriod_ID, 
    BT.AUA_Bracket
-- Step 4: Order by TimePeriod and the custom bracket order
ORDER BY 
    BT.TimePeriod_ID,
    CASE BT.AUA_Bracket
        WHEN '<$0'       THEN 1
        WHEN '$0'        THEN 2
        WHEN '$0-$250K'  THEN 3
        WHEN '$250K-$500K' THEN 4
        WHEN '$500K-$1M' THEN 5
        WHEN '$1M-$5M'   THEN 6
        WHEN '$5M-$20M'  THEN 7
        WHEN '$20M+'     THEN 8
    END;
 
 
 
 /*===============================
  1.  Aggregate to one row per
      (TimePeriod_ID, HouseholdKey)
      ─ only accounts that start
        with "3" are included
===============================*/
WITH HouseholdTotals AS (
    SELECT
        TimePeriod_ID,
        HouseholdKey,
        SUM(TotalAUA) AS TotalAUA       -- summed across all "3‑" accounts in the HH
    FROM [ZZR0Prod].[dbo].[v_M_AcctHistory]
    WHERE TimePeriod_ID IN (202412, 202501, 202503)
      AND CAST(ADPAccountNumber AS varchar(50)) LIKE '3%'   -- << new filter
    GROUP BY
        TimePeriod_ID,
        HouseholdKey
),

/*===============================
  2.  Tag each household‑period
      with the correct AUA bracket
===============================*/
BracketedTotals AS (
    SELECT
        HT.TimePeriod_ID,
        HT.HouseholdKey,
        HT.TotalAUA,
        CASE
            WHEN HT.TotalAUA < 0           THEN '<$0'
            WHEN HT.TotalAUA = 0           THEN '$0'
            WHEN HT.TotalAUA <=  250000    THEN '$0‑$250K'
            WHEN HT.TotalAUA <=  500000    THEN '$250K‑$500K'
            WHEN HT.TotalAUA <= 1000000    THEN '$500K‑$1M'
            WHEN HT.TotalAUA <= 5000000    THEN '$1M‑$5M'
            WHEN HT.TotalAUA <= 20000000   THEN '$5M‑$20M'
            ELSE '$20M+'
        END AS AUA_Bracket
    FROM HouseholdTotals AS HT
)

/*===============================
  3.  Final roll‑up
===============================*/
SELECT
    BT.TimePeriod_ID,
    BT.AUA_Bracket,
    COUNT(*)        AS HouseholdCount,   -- each row is one unique HH
    SUM(BT.TotalAUA) AS TotalAUA_Sum
FROM BracketedTotals AS BT
GROUP BY
    BT.TimePeriod_ID,
    BT.AUA_Bracket
ORDER BY
    BT.TimePeriod_ID,
    CASE BT.AUA_Bracket           -- logical bracket order
        WHEN '<$0'        THEN 1
        WHEN '$0'         THEN 2
        WHEN '$0‑$250K'   THEN 3
        WHEN '$250K‑$500K' THEN 4
        WHEN '$500K‑$1M'  THEN 5
        WHEN '$1M‑$5M'    THEN 6
        WHEN '$5M‑$20M'   THEN 7
        WHEN '$20M+'      THEN 8
    END;
    
    
    
/*────────────────────────────────────────────────────────
  STEP 1 ─ Filter rows: three periods only, accounts
           whose ADPAccountNumber starts with "3"
────────────────────────────────────────────────────────*/
WITH Filtered AS (
    SELECT
        TimePeriod_ID,
        -- canonical household ID: trim + upper‑case
        UPPER(LTRIM(RTRIM(HouseholdKey))) AS CleanHH,
        TotalAUA
    FROM [ZZR0Prod].[dbo].[v_M_AcctHistory]
    WHERE TimePeriod_ID IN (202412, 202501, 202503)
      AND CAST(ADPAccountNumber AS varchar(50)) LIKE '3%'  -- drop CAST if column is already text
      AND HouseholdKey IS NOT NULL                          -- toss null / blank keys
),

/*────────────────────────────────────────────────────────
  STEP 2 ─ Aggregate to ONE row per (Period, Household)
────────────────────────────────────────────────────────*/
HouseholdTotals AS (
    SELECT
        TimePeriod_ID,
        CleanHH,
        SUM(TotalAUA) AS TotalAUA        -- all 3‑accounts rolled into one per HH/period
    FROM Filtered
    GROUP BY
        TimePeriod_ID,
        CleanHH
),

/*────────────────────────────────────────────────────────
  STEP 3 ─ Assign AUA brackets
────────────────────────────────────────────────────────*/
Bracketed AS (
    SELECT
        TimePeriod_ID,
        CleanHH,
        TotalAUA,
        CASE
            WHEN TotalAUA <   0           THEN '<$0'
            WHEN TotalAUA =   0           THEN '$0'
            WHEN TotalAUA <=  250000      THEN '$0‑$250K'
            WHEN TotalAUA <=  500000      THEN '$250K‑$500K'
            WHEN TotalAUA <= 1000000      THEN '$500K‑$1M'
            WHEN TotalAUA <= 5000000      THEN '$1M‑$5M'
            WHEN TotalAUA <= 20000000     THEN '$5M‑$20M'
            ELSE '$20M+'
        END AS AUA_Bracket
    FROM HouseholdTotals
)

/*────────────────────────────────────────────────────────
  STEP 4 ─ Final roll‑up
────────────────────────────────────────────────────────*/
SELECT
    TimePeriod_ID,
    AUA_Bracket,
    COUNT(DISTINCT CleanHH)  AS HouseholdCount,   -- bullet‑proof unique HH count
    SUM(TotalAUA)            AS TotalAUA_Sum
FROM Bracketed
GROUP BY
    TimePeriod_ID,
    AUA_Bracket
ORDER BY
    TimePeriod_ID,
    CASE AUA_Bracket
        WHEN '<$0'         THEN 1
        WHEN '$0'          THEN 2
        WHEN '$0‑$250K'    THEN 3
        WHEN '$250K‑$500K' THEN 4
        WHEN '$500K‑$1M'   THEN 5
        WHEN '$1M‑$5M'     THEN 6
        WHEN '$5M‑$20M'    THEN 7
        WHEN '$20M+'       THEN 8
    END; 
 
 
 /*────────────────────────────────────────────────────────
 STEP 0  –  Parameters (easy to tweak)
────────────────────────────────────────────────────────*/
DECLARE @WantedPeriods TABLE (TimePeriod_ID int PRIMARY KEY);
INSERT INTO @WantedPeriods (TimePeriod_ID)
VALUES (202412),(202501),(202503);   -- add / remove periods here

/*────────────────────────────────────────────────────────
 STEP 1  –  Raw filter
           •  only wanted periods
           •  ADPAccountNumber starts with '3'
           •  non‑NULL HouseholdKey
────────────────────────────────────────────────────────*/
WITH Filtered AS (
    SELECT
        p.TimePeriod_ID,
        -- canonical HH key (trim + upper‑case)
        UPPER(LTRIM(RTRIM(v.HouseholdKey))) AS CleanHH,
        v.TotalAUA
    FROM [ZZR0Prod].[dbo].[v_M_AcctHistory] v
    JOIN @WantedPeriods p
      ON p.TimePeriod_ID = v.TimePeriod_ID
    WHERE CAST(v.ADPAccountNumber AS varchar(50)) LIKE '3%'  -- drop CAST if already varchar
      AND v.HouseholdKey IS NOT NULL
),

/*────────────────────────────────────────────────────────
 STEP 2  –  ONE row per (TimePeriod_ID, CleanHH)
────────────────────────────────────────────────────────*/
HouseholdTotals AS (
    SELECT
        TimePeriod_ID,
        CleanHH,
        SUM(TotalAUA) AS TotalAUA
    FROM Filtered
    GROUP BY
        TimePeriod_ID,
        CleanHH
),

/*────────────────────────────────────────────────────────
 STEP 3  –  Assign AUA bracket
────────────────────────────────────────────────────────*/
Bracketed AS (
    SELECT
        TimePeriod_ID,
        CleanHH,
        TotalAUA,
        CASE
            WHEN TotalAUA <    0        THEN '<$0'
            WHEN TotalAUA =    0        THEN '$0'
            WHEN TotalAUA <=  250000    THEN '$0‑$250K'
            WHEN TotalAUA <=  500000    THEN '$250K‑$500K'
            WHEN TotalAUA <= 1000000    THEN '$500K‑$1M'
            WHEN TotalAUA <= 5000000    THEN '$1M‑$5M'
            WHEN TotalAUA <= 20000000   THEN '$5M‑$20M'
            ELSE '$20M+'
        END AS AUA_Bracket
    FROM HouseholdTotals
)

/*────────────────────────────────────────────────────────
 STEP 4  –  FINAL roll‑up
           •  DISTINCT household count *inside* each
             (TimePeriod, Bracket)
────────────────────────────────────────────────────────*/
SELECT
    TimePeriod_ID,
    AUA_Bracket,
    COUNT(DISTINCT CleanHH)  AS UniqueHouseholds,   -- ← THE exact per‑period HH count
    SUM(TotalAUA)            AS BracketTotalAUA
FROM Bracketed
GROUP BY
    TimePeriod_ID,
    AUA_Bracket
ORDER BY
    TimePeriod_ID,
    CASE AUA_Bracket
        WHEN '<$0'         THEN 1
        WHEN '$0'          THEN 2
        WHEN '$0‑$250K'    THEN 3
        WHEN '$250K‑$500K' THEN 4
        WHEN '$500K‑$1M'   THEN 5
        WHEN '$1M‑$5M'     THEN 6
        WHEN '$5M‑$20M'    THEN 7
        WHEN '$20M+'       THEN 8



/*========================================================
  RAW DATA EXTRACT
  • Only ADPAccountNumber values that start with 3
  • Only the three reporting periods you specified
  • Returns the three columns you told me you need
========================================================*/
SELECT
    TimePeriod_ID,
    HouseholdKey,
    TotalAUA
    -- , ADPAccountNumber   -- ←‑uncomment if you want to see it too
FROM [ZZR0Prod].[dbo].[v_M_AcctHistory]
WHERE TimePeriod_ID IN (202412, 202501, 202503)
  -- If ADPAccountNumber is VARCHAR/CHAR, use the line below:
  AND ADPAccountNumber LIKE '3%'
  
  -- If ADPAccountNumber is numeric, cast it to text first:
  -- AND CAST(ADPAccountNumber AS varchar(50)) LIKE '3%'
;
/*========================================================
  RAW DATA EXTRACT
  • Only ADPAccountNumber values that start with 3
  • Only the three reporting periods you specified
  • Returns the three columns you told me you need
========================================================*/
SELECT
    TimePeriod_ID,
    HouseholdKey,
    TotalAUA
    -- , ADPAccountNumber   -- ←‑uncomment if you want to see it too
FROM [ZZR0Prod].[dbo].[v_M_AcctHistory]
WHERE TimePeriod_ID IN (202412, 202501, 202503)
  -- If ADPAccountNumber is VARCHAR/CHAR, use the line below:
  AND ADPAccountNumber LIKE '3%'
  
  -- If ADPAccountNumber is numeric, cast it to text first:
  -- AND CAST(ADPAccountNumber AS varchar(50)) LIKE '3%'
;




/*────────────────────────────────────────────────────────
 STEP 0  –  Parameters (easy to tweak)
────────────────────────────────────────────────────────*/
DECLARE @WantedPeriods TABLE (TimePeriod_ID int PRIMARY KEY);
INSERT INTO @WantedPeriods (TimePeriod_ID)
VALUES (202412),(202501),(202503);   -- add / remove periods here

/*────────────────────────────────────────────────────────
 STEP 1  –  Raw filter
           • only wanted periods
           • ADPAccountNumber starts with '3'
           • ActiveFlag = 1   ← NEW
           • non‑NULL HouseholdKey
────────────────────────────────────────────────────────*/
WITH Filtered AS (
    SELECT
        p.TimePeriod_ID,
        -- canonical HH key (trim + upper‑case)
        UPPER(LTRIM(RTRIM(v.HouseholdKey))) AS CleanHH,
        v.TotalAUA
    FROM [ZZR0Prod].[dbo].[v_M_AcctHistory] v
    JOIN @WantedPeriods p
      ON p.TimePeriod_ID = v.TimePeriod_ID
    WHERE CAST(v.ADPAccountNumber AS varchar(50)) LIKE '3%'   -- drop CAST if varchar
      AND v.ActiveFlag = 1                                     -- keep ONLY active accounts
      AND v.HouseholdKey IS NOT NULL
),

/*────────────────────────────────────────────────────────
 STEP 2  –  ONE row per (TimePeriod_ID, CleanHH)
────────────────────────────────────────────────────────*/
HouseholdTotals AS (
    SELECT
        TimePeriod_ID,
        CleanHH,
        SUM(TotalAUA) AS TotalAUA
    FROM Filtered
    GROUP BY
        TimePeriod_ID,
        CleanHH
),

/*────────────────────────────────────────────────────────
 STEP 3  –  Assign AUA bracket
────────────────────────────────────────────────────────*/
Bracketed AS (
    SELECT
        TimePeriod_ID,
        CleanHH,
        TotalAUA,
        CASE
            WHEN TotalAUA <    0        THEN '<$0'
            WHEN TotalAUA =    0        THEN '$0'
            WHEN TotalAUA <=  250000    THEN '$0‑$250K'
            WHEN TotalAUA <=  500000    THEN '$250K‑$500K'
            WHEN TotalAUA <= 1000000    THEN '$500K‑$1M'
            WHEN TotalAUA <= 5000000    THEN '$1M‑$5M'
            WHEN TotalAUA <= 20000000   THEN '$5M‑$20M'
            ELSE '$20M+'
        END AS AUA_Bracket
    FROM HouseholdTotals
)

/*────────────────────────────────────────────────────────
 STEP 4  –  FINAL roll‑up
           • DISTINCT household count *inside* each
             (TimePeriod, Bracket)
────────────────────────────────────────────────────────*/
SELECT
    TimePeriod_ID,
    AUA_Bracket,
    COUNT(DISTINCT CleanHH)  AS UniqueHouseholds,  -- per‑period HH count
    SUM(TotalAUA)            AS BracketTotalAUA
FROM Bracketed
GROUP BY
    TimePeriod_ID,
    AUA_Bracket
ORDER BY
    TimePeriod_ID,
    CASE AUA_Bracket
        WHEN '<$0'         THEN 1
        WHEN '$0'          THEN 2
        WHEN '$0‑$250K'    THEN 3
        WHEN '$250K‑$500K' THEN 4
        WHEN '$500K‑$1M'   THEN 5
        WHEN '$1M‑$5M'     THEN 6
        WHEN '$5M‑$20M'    THEN 7
        WHEN '$20M+'       THEN 8
    END;
