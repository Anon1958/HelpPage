import pandas as pd
from pptx import Presentation
from pptx.util import Inches

# Read data from Excel
excel_file = "data.xlsx"
sheet_name = "Sheet1"  # Change if necessary
df = pd.read_excel(excel_file, sheet_name=sheet_name)

# Open the PowerPoint presentation
prs = Presentation("template.pptx")

# Get slide 7 (index 6)
slide = prs.slides[6]

# Determine table dimensions: add one row for headers
rows = df.shape[0] + 1
cols = df.shape[1]

# Define table position and size (adjust these values as needed)
left = Inches(1)
top = Inches(2)
width = Inches(8)
height = Inches(0.8 * rows)  # approximate height per row

# Add table shape to the slide
table_shape = slide.shapes.add_table(rows, cols, left, top, width, height)
table = table_shape.table

# Fill the header row
for col_index, col_name in enumerate(df.columns):
    table.cell(0, col_index).text = str(col_name)

# Fill in the data rows
for i, row in df.iterrows():
    for j, value in enumerate(row):
        table.cell(i+1, j).text = str(value)

# Save the updated presentation
prs.save("output.pptx")


------
import os
import datetime
from openpyxl import load_workbook

# Path to your PDF file scraped from the email
pdf_path = "path/to/your/file.pdf"

# Get the file's last modified timestamp
timestamp = os.path.getmtime(pdf_path)

# Convert the timestamp to a datetime object and extract only the date
modified_date = datetime.datetime.fromtimestamp(timestamp).date()
# Format the date as desired (for example, YYYY-MM-DD)
date_str = modified_date.strftime("%Y-%m-%d")

# Load your Utilization workbook (adjust the filename as needed)
workbook_path = "utilization.xlsx"
wb = load_workbook(workbook_path)

# Select the "Utilization" sheet
ws = wb["Utilization"]

# Get the existing value in cell I4 (if any) and append the new date
existing_value = ws["I4"].value
if existing_value:
    # Append new date to the existing text, separated by a comma
    ws["I4"].value = f"{existing_value}, {date_str}"
else:
    ws["I4"].value = date_str

# Save the workbook
wb.save(workbook_path)
333333333333333333333333

import os
import pandas as pd
from openpyxl import load_workbook
from datetime import datetime

# ------------------------------
# Amendable Paths and Variables
# ------------------------------

pdf_file_path = r"C:\Users\iams395\FP&A\your_downloaded_file.pdf"
excel_file_path = r"C:\Users\iams395\FP&A\3rd Party Banks Script.xlsx"
excel_sheet_to_update = 'Utilization_Summary'  # Your actual Excel sheet to insert date (if different)
target_excel_cell = 'I1'  # Change cell location as needed (e.g., 'I1', 'I2', etc.)

# ------------------------------
# Get modified date from PDF file
# ------------------------------

# Retrieve the modified timestamp of your PDF file
timestamp = os.path.getmtime(pdf_file_path)

# Convert timestamp to datetime and format as date only (no time)
date_modified = datetime.fromtimestamp(timestamp).strftime('%Y-%m-%d')

print(f"PDF file modified date: {date_modified}")

# ------------------------------
# Write date into Excel cell
# ------------------------------

# Load existing workbook
wb = load_workbook(excel_file_path)

# Choose the exact worksheet:
sheet_name = 'IND_DAILY_BANK_RECAP'
ws = wb[sheet_name]

# Write the date (no time) to the specified cell
ws[target_excel_cell] = datetime.fromtimestamp(timestamp).date()

# Save workbook
wb.save(excel_file_path)

print(f"Date '{datetime.fromtimestamp(timestamp).date()}' written to '{sheet_name}' sheet, cell {target_excel_cell} successfully.")