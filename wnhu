-- üîç View SQL Definitions (Trace Source Logic)
EXEC sp_helptext 'ZZROProd.SSE.v_M_BAMHouseholdCurrent';
GO
EXEC sp_helptext 'ZZROProd.SSE.v_M_AcctHistory';
GO
EXEC sp_helptext 'ZZROProd.SSE.v_M_NNAAcctHST';
GO

-- üß≠ Map Columns from Views (Trace Field Lineage)
SELECT 
    v.name AS ViewName,
    c.name AS ColumnName,
    c.column_id
FROM sys.views v
JOIN sys.columns c ON v.object_id = c.object_id
WHERE v.name IN (
    'v_M_BAMHouseholdCurrent', 
    'v_M_AcctHistory', 
    'v_M_NNAAcctHST'
);
GO

-- üóÇÔ∏è Example: Add Field Description to BAM View
EXEC sp_addextendedproperty 
    @name = N'MS_Description', 
    @value = N'Comes from monthly UHNW ETL process pre-merge',
    @level0type = N'SCHEMA', @level0name = 'SSE',
    @level1type = N'VIEW',  @level1name = 'v_M_BAMHouseholdCurrent',
    @level2type = N'COLUMN', @level2name = 'HouseholdID';
GO



-- Always start by switching to the right DB
USE ZZROProd;
GO

-- View SQL Definitions
EXEC sp_helptext 'SSE.v_M_BAMHouseholdCurrent';
GO
EXEC sp_helptext 'SSE.v_M_AcctHistory';
GO
EXEC sp_helptext 'SSE.v_M_NNAAcctHST';
GO

-- Add documentation for a column
EXEC sp_addextendedproperty 
    @name = N'MS_Description', 
    @value = N'Loaded monthly from UHNW data source via ETL',
    @level0type = N'SCHEMA', @level0name = 'SSE',
    @level1type = N'VIEW',  @level1name = 'v_M_BAMHouseholdCurrent',
    @level2type = N'COLUMN', @level2name = 'HouseholdID';
GO



USE YourDatabase;
SELECT 
    sed.referenced_schema_name, 
    sed.referenced_entity_name,
    sed.referenced_class_desc
FROM sys.sql_expression_dependencies AS sed
WHERE sed.referencing_id = OBJECT_ID(N'SSE.v_M_BAMHouseholdCurrent');






USE ZZROProd;
GO

SELECT 
    OBJECT_NAME(sed.referencing_id) AS referencing_view,
    sed.referenced_schema_name, 
    sed.referenced_entity_name,
    sed.referenced_class_desc
FROM sys.sql_expression_dependencies AS sed
WHERE sed.referencing_id IN (
    OBJECT_ID(N'dbo.e_M_BAMHouseholdCurrent'),
    OBJECT_ID(N'dbo.e_M_AccountHistory'),
    OBJECT_ID(N'dbo.e_M_NNAAcctHST')
);


EXEC sp_helptext 'dbo.e_M_BAMHouseholdCurrent';
GO
EXEC sp_helptext 'dbo.e_M_AccountHistory';
GO
EXEC sp_helptext 'dbo.e_M_NNAAcctHST';
GO


inspect tables


USE ZZROProd;
GO
SELECT 
    o.name,
    o.type,            -- 'U' = table, 'S' = system table, 'SN' = synonym
    o.type_desc
FROM sys.objects o
WHERE o.name IN ('e_M_BAMHouseholdCurrent',
                 'e_M_AccountHistory',
                 'e_M_NNAAcctHST');




USE ZZROProd;
GO
/*‚ÄáA)¬†List of columns */
SELECT 
    COLUMN_NAME,
    DATA_TYPE,
    ORDINAL_POSITION
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA = 'dbo'
  AND TABLE_NAME   = 'e_M_BAMHouseholdCurrent'
ORDER BY ORDINAL_POSITION;
GO
/*‚ÄáB)¬†First¬†100 rows (add an ORDER¬†BY once you identify a freshness column) */
SELECT TOP (100) *
FROM dbo.e_M_BAMHouseholdCurrent;
GO



freshness 


USE ZZROProd;
GO
/* 1Ô∏è‚É£  See the most recent timestamp in the whole table */
SELECT MAX(LastUpdateDT) AS LatestLastUpdateDT
FROM dbo.e_M_NNAAcctHST;
GO

/* 2Ô∏è‚É£  Pull the 100 most‚Äërecent rows, newest first */
SELECT TOP (100) *
FROM dbo.e_M_NNAAcctHST
ORDER BY LastUpdateDT DESC;
GO

/* 3Ô∏è‚É£  OPTIONAL:  Check freshness by month (TimePeriod_ID) */
SELECT
    TimePeriod_ID,
    MAX(LastUpdateDT) AS MaxLastUpdateDT,
    COUNT(*)          AS RowCount
FROM dbo.e_M_NNAAcctHST
GROUP BY TimePeriod_ID
ORDER BY TimePeriod_ID DESC;
GO

/* 4Ô∏è‚É£  OPTIONAL:  Inspect ONLY the rows loaded in the latest batch */
DECLARE @LatestDT DATETIME = (
    SELECT MAX(LastUpdateDT)
    FROM dbo.e_M_NNAAcctHST
);
SELECT *
FROM dbo.e_M_NNAAcctHST
WHERE LastUpdateDT = @LatestDT;
GO






